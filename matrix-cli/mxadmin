#!/usr/bin/env python3
import yaml
import logging
import argparse

from matrix_cli import MatrixAdmin, MatrixStreamLogger

class Config:

    def __init__(self):
        with open('config.yaml', 'r') as config_file:
            config = yaml.safe_load(config_file)
            self.USER = config['user']
            self.LOG_ROOM = config['logRoomId']

CONFIG = Config()

log_formatter = logging.Formatter("%(asctime)s %(message)s")
root_logger = logging.getLogger()
root_logger.setLevel(logging.INFO)

file_handler = logging.FileHandler('admin_audit.log')
file_handler.setFormatter(log_formatter)
root_logger.addHandler(file_handler)

console_handler = logging.StreamHandler()
console_handler.setFormatter(log_formatter)
root_logger.addHandler(console_handler)

parser = argparse.ArgumentParser(description='Matrix Command Line Admin Tool.')
parser.add_argument('--resolve-aliases', nargs='+')
parser.add_argument('--park-aliases', nargs='+')
parser.add_argument('--shutdown-rooms', nargs='+')
parser.add_argument('--deactivate-users', nargs='+')
parser.add_argument('--delete-aliases', nargs='+')
parser.add_argument('--delist-rooms', nargs='+')
parser.add_argument('--test', nargs='+')
parser.add_argument('--assign-alias', nargs=2)
parser.add_argument('--message')
args = parser.parse_args()

admin = MatrixAdmin(
    CONFIG.USER['mxid'],
    CONFIG.USER['password']
)
log_room = CONFIG.LOG_ROOM

matrix_handler = MatrixStreamLogger(admin._client, log_room)
matrix_handler.setFormatter(log_formatter)
root_logger.addHandler(matrix_handler)

if args.resolve_aliases:
    for alias in args.resolve_aliases:
        print('%s -> %s' % (alias, admin.resolve_alias(alias)))
elif args.assign_alias:
    if args.assign_alias[0].startswith('#') and args.assign_alias[1].startswith('!'):
        admin.assign_alias(args.assign_alias[1], args.assign_alias[0])
    else:
        admin.assign_alias(args.assign_alias[0], args.assign_alias[1])
elif args.delist_rooms:
    for room in args.delist_rooms:
        admin.delist_room(room)
elif args.delete_aliases:
    for alias in args.delete_aliases:
        admin.delete_alias(alias)
elif args.park_aliases:
    for alias in args.park_aliases:
        admin.park_alias(alias)
elif args.shutdown_rooms:
    for room in args.shutdown_rooms:
        admin.shutdown_room_and_quarantine_media(room,
                                                 message=args.message)
elif args.test:
    for value in args.test:
        print('Testing: ' + value)
elif args.deactivate_users:
    for user in args.deactivate_users:
        admin.deactivate_user(user)

